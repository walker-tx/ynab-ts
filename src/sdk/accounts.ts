/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { accountsCreate } from "../funcs/accountsCreate.js";
import { accountsGet } from "../funcs/accountsGet.js";
import { accountsList } from "../funcs/accountsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Accounts extends ClientSDK {
  /**
   * Account list
   *
   * @remarks
   * Returns all accounts
   */
  async list(
    request: operations.GetAccountsRequest,
    options?: RequestOptions,
  ): Promise<operations.GetAccountsResponse> {
    return unwrapAsync(accountsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create a new account
   *
   * @remarks
   * Creates a new account
   */
  async create(
    request: operations.CreateAccountRequest,
    options?: RequestOptions,
  ): Promise<models.AccountResponse> {
    return unwrapAsync(accountsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Single account
   *
   * @remarks
   * Returns a single account
   */
  async get(
    request: operations.GetAccountByIdRequest,
    options?: RequestOptions,
  ): Promise<operations.GetAccountByIdResponse> {
    return unwrapAsync(accountsGet(
      this,
      request,
      options,
    ));
  }
}
