/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { categoriesGet } from "../funcs/categoriesGet.js";
import { categoriesGetByMonth } from "../funcs/categoriesGetByMonth.js";
import { categoriesList } from "../funcs/categoriesList.js";
import { categoriesUpdate } from "../funcs/categoriesUpdate.js";
import { categoriesUpdateMonth } from "../funcs/categoriesUpdateMonth.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Categories extends ClientSDK {
  /**
   * List categories
   *
   * @remarks
   * Returns all categories grouped by category group.  Amounts (budgeted, activity, balance, etc.) are specific to the current budget month (UTC).
   */
  async list(
    request: operations.GetCategoriesRequest,
    options?: RequestOptions,
  ): Promise<operations.GetCategoriesResponse> {
    return unwrapAsync(categoriesList(
      this,
      request,
      options,
    ));
  }

  /**
   * Single category
   *
   * @remarks
   * Returns a single category.  Amounts (budgeted, activity, balance, etc.) are specific to the current budget month (UTC).
   */
  async get(
    request: operations.GetCategoryByIdRequest,
    options?: RequestOptions,
  ): Promise<operations.GetCategoryByIdResponse> {
    return unwrapAsync(categoriesGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a category
   *
   * @remarks
   * Update a category
   */
  async update(
    request: operations.UpdateCategoryRequest,
    options?: RequestOptions,
  ): Promise<models.SaveCategoryResponse> {
    return unwrapAsync(categoriesUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Single category for a specific budget month
   *
   * @remarks
   * Returns a single category for a specific budget month.  Amounts (budgeted, activity, balance, etc.) are specific to the current budget month (UTC).
   */
  async getByMonth(
    request: operations.GetMonthCategoryByIdRequest,
    options?: RequestOptions,
  ): Promise<operations.GetMonthCategoryByIdResponse> {
    return unwrapAsync(categoriesGetByMonth(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a category for a specific month
   *
   * @remarks
   * Update a category for a specific month.  Only `budgeted` amount can be updated.
   */
  async updateMonth(
    request: operations.UpdateMonthCategoryRequest,
    options?: RequestOptions,
  ): Promise<models.SaveCategoryResponse> {
    return unwrapAsync(categoriesUpdateMonth(
      this,
      request,
      options,
    ));
  }
}
