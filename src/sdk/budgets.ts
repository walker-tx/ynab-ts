/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { budgetsGet } from "../funcs/budgetsGet.js";
import { budgetsGetSettings } from "../funcs/budgetsGetSettings.js";
import { budgetsList } from "../funcs/budgetsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Budgets extends ClientSDK {
  /**
   * List budgets
   *
   * @remarks
   * Returns budgets list with summary information
   */
  async list(
    request?: operations.GetBudgetsRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.GetBudgetsResponse> {
    return unwrapAsync(budgetsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Single budget
   *
   * @remarks
   * Returns a single budget with all related entities.  This resource is effectively a full budget export.
   */
  async get(
    request: operations.GetBudgetByIdRequest,
    options?: RequestOptions,
  ): Promise<operations.GetBudgetByIdResponse> {
    return unwrapAsync(budgetsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Budget Settings
   *
   * @remarks
   * Returns settings for a budget
   */
  async getSettings(
    request: operations.GetBudgetSettingsByIdRequest,
    options?: RequestOptions,
  ): Promise<operations.GetBudgetSettingsByIdResponse> {
    return unwrapAsync(budgetsGetSettings(
      this,
      request,
      options,
    ));
  }
}
