/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type SavePayee = {
  /**
   * The name of the payee. The name must be a maximum of 500 characters.
   */
  name?: string | undefined;
};

/** @internal */
export const SavePayee$inboundSchema: z.ZodType<
  SavePayee,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
});

/** @internal */
export type SavePayee$Outbound = {
  name?: string | undefined;
};

/** @internal */
export const SavePayee$outboundSchema: z.ZodType<
  SavePayee$Outbound,
  z.ZodTypeDef,
  SavePayee
> = z.object({
  name: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SavePayee$ {
  /** @deprecated use `SavePayee$inboundSchema` instead. */
  export const inboundSchema = SavePayee$inboundSchema;
  /** @deprecated use `SavePayee$outboundSchema` instead. */
  export const outboundSchema = SavePayee$outboundSchema;
  /** @deprecated use `SavePayee$Outbound` instead. */
  export type Outbound = SavePayee$Outbound;
}

export function savePayeeToJSON(savePayee: SavePayee): string {
  return JSON.stringify(SavePayee$outboundSchema.parse(savePayee));
}

export function savePayeeFromJSON(
  jsonString: string,
): SafeParseResult<SavePayee, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SavePayee$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SavePayee' from JSON`,
  );
}
