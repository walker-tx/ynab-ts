/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type CategoryGroup = {
  id: string;
  name: string;
  /**
   * Whether or not the category group is hidden
   */
  hidden: boolean;
  /**
   * Whether or not the category group has been deleted.  Deleted category groups will only be included in delta requests.
   */
  deleted: boolean;
};

/** @internal */
export const CategoryGroup$inboundSchema: z.ZodType<
  CategoryGroup,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  name: z.string(),
  hidden: z.boolean(),
  deleted: z.boolean(),
});

/** @internal */
export type CategoryGroup$Outbound = {
  id: string;
  name: string;
  hidden: boolean;
  deleted: boolean;
};

/** @internal */
export const CategoryGroup$outboundSchema: z.ZodType<
  CategoryGroup$Outbound,
  z.ZodTypeDef,
  CategoryGroup
> = z.object({
  id: z.string(),
  name: z.string(),
  hidden: z.boolean(),
  deleted: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CategoryGroup$ {
  /** @deprecated use `CategoryGroup$inboundSchema` instead. */
  export const inboundSchema = CategoryGroup$inboundSchema;
  /** @deprecated use `CategoryGroup$outboundSchema` instead. */
  export const outboundSchema = CategoryGroup$outboundSchema;
  /** @deprecated use `CategoryGroup$Outbound` instead. */
  export type Outbound = CategoryGroup$Outbound;
}

export function categoryGroupToJSON(categoryGroup: CategoryGroup): string {
  return JSON.stringify(CategoryGroup$outboundSchema.parse(categoryGroup));
}

export function categoryGroupFromJSON(
  jsonString: string,
): SafeParseResult<CategoryGroup, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CategoryGroup$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CategoryGroup' from JSON`,
  );
}
