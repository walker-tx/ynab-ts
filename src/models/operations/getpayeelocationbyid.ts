/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetPayeeLocationByIdRequest = {
  /**
   * The id of the budget. "last-used" can be used to specify the last used budget and "default" can be used if default budget selection is enabled (see: https://api.ynab.com/#oauth-default-budget).
   */
  budgetId: string;
  /**
   * id of payee location
   */
  payeeLocationId: string;
};

/** @internal */
export const GetPayeeLocationByIdRequest$inboundSchema: z.ZodType<
  GetPayeeLocationByIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  budget_id: z.string(),
  payee_location_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "budget_id": "budgetId",
    "payee_location_id": "payeeLocationId",
  });
});

/** @internal */
export type GetPayeeLocationByIdRequest$Outbound = {
  budget_id: string;
  payee_location_id: string;
};

/** @internal */
export const GetPayeeLocationByIdRequest$outboundSchema: z.ZodType<
  GetPayeeLocationByIdRequest$Outbound,
  z.ZodTypeDef,
  GetPayeeLocationByIdRequest
> = z.object({
  budgetId: z.string(),
  payeeLocationId: z.string(),
}).transform((v) => {
  return remap$(v, {
    budgetId: "budget_id",
    payeeLocationId: "payee_location_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPayeeLocationByIdRequest$ {
  /** @deprecated use `GetPayeeLocationByIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetPayeeLocationByIdRequest$inboundSchema;
  /** @deprecated use `GetPayeeLocationByIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetPayeeLocationByIdRequest$outboundSchema;
  /** @deprecated use `GetPayeeLocationByIdRequest$Outbound` instead. */
  export type Outbound = GetPayeeLocationByIdRequest$Outbound;
}

export function getPayeeLocationByIdRequestToJSON(
  getPayeeLocationByIdRequest: GetPayeeLocationByIdRequest,
): string {
  return JSON.stringify(
    GetPayeeLocationByIdRequest$outboundSchema.parse(
      getPayeeLocationByIdRequest,
    ),
  );
}

export function getPayeeLocationByIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetPayeeLocationByIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetPayeeLocationByIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetPayeeLocationByIdRequest' from JSON`,
  );
}
