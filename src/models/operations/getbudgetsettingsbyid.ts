/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetBudgetSettingsByIdRequest = {
  /**
   * The id of the budget. "last-used" can be used to specify the last used budget and "default" can be used if default budget selection is enabled (see: https://api.ynab.com/#oauth-default-budget).
   */
  budgetId: string;
};

/** @internal */
export const GetBudgetSettingsByIdRequest$inboundSchema: z.ZodType<
  GetBudgetSettingsByIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  budget_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "budget_id": "budgetId",
  });
});

/** @internal */
export type GetBudgetSettingsByIdRequest$Outbound = {
  budget_id: string;
};

/** @internal */
export const GetBudgetSettingsByIdRequest$outboundSchema: z.ZodType<
  GetBudgetSettingsByIdRequest$Outbound,
  z.ZodTypeDef,
  GetBudgetSettingsByIdRequest
> = z.object({
  budgetId: z.string(),
}).transform((v) => {
  return remap$(v, {
    budgetId: "budget_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBudgetSettingsByIdRequest$ {
  /** @deprecated use `GetBudgetSettingsByIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetBudgetSettingsByIdRequest$inboundSchema;
  /** @deprecated use `GetBudgetSettingsByIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetBudgetSettingsByIdRequest$outboundSchema;
  /** @deprecated use `GetBudgetSettingsByIdRequest$Outbound` instead. */
  export type Outbound = GetBudgetSettingsByIdRequest$Outbound;
}

export function getBudgetSettingsByIdRequestToJSON(
  getBudgetSettingsByIdRequest: GetBudgetSettingsByIdRequest,
): string {
  return JSON.stringify(
    GetBudgetSettingsByIdRequest$outboundSchema.parse(
      getBudgetSettingsByIdRequest,
    ),
  );
}

export function getBudgetSettingsByIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetBudgetSettingsByIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetBudgetSettingsByIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetBudgetSettingsByIdRequest' from JSON`,
  );
}
