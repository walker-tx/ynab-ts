/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetScheduledTransactionByIdRequest = {
  /**
   * The id of the budget. "last-used" can be used to specify the last used budget and "default" can be used if default budget selection is enabled (see: https://api.ynab.com/#oauth-default-budget).
   */
  budgetId: string;
  /**
   * The id of the scheduled transaction
   */
  scheduledTransactionId: string;
};

/** @internal */
export const GetScheduledTransactionByIdRequest$inboundSchema: z.ZodType<
  GetScheduledTransactionByIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  budget_id: z.string(),
  scheduled_transaction_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "budget_id": "budgetId",
    "scheduled_transaction_id": "scheduledTransactionId",
  });
});

/** @internal */
export type GetScheduledTransactionByIdRequest$Outbound = {
  budget_id: string;
  scheduled_transaction_id: string;
};

/** @internal */
export const GetScheduledTransactionByIdRequest$outboundSchema: z.ZodType<
  GetScheduledTransactionByIdRequest$Outbound,
  z.ZodTypeDef,
  GetScheduledTransactionByIdRequest
> = z.object({
  budgetId: z.string(),
  scheduledTransactionId: z.string(),
}).transform((v) => {
  return remap$(v, {
    budgetId: "budget_id",
    scheduledTransactionId: "scheduled_transaction_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetScheduledTransactionByIdRequest$ {
  /** @deprecated use `GetScheduledTransactionByIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetScheduledTransactionByIdRequest$inboundSchema;
  /** @deprecated use `GetScheduledTransactionByIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetScheduledTransactionByIdRequest$outboundSchema;
  /** @deprecated use `GetScheduledTransactionByIdRequest$Outbound` instead. */
  export type Outbound = GetScheduledTransactionByIdRequest$Outbound;
}

export function getScheduledTransactionByIdRequestToJSON(
  getScheduledTransactionByIdRequest: GetScheduledTransactionByIdRequest,
): string {
  return JSON.stringify(
    GetScheduledTransactionByIdRequest$outboundSchema.parse(
      getScheduledTransactionByIdRequest,
    ),
  );
}

export function getScheduledTransactionByIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetScheduledTransactionByIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetScheduledTransactionByIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetScheduledTransactionByIdRequest' from JSON`,
  );
}
