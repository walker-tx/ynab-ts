/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type SaveMonthCategory = {
  /**
   * Budgeted amount in milliunits format
   */
  budgeted: number;
};

/** @internal */
export const SaveMonthCategory$inboundSchema: z.ZodType<
  SaveMonthCategory,
  z.ZodTypeDef,
  unknown
> = z.object({
  budgeted: z.number().int(),
});

/** @internal */
export type SaveMonthCategory$Outbound = {
  budgeted: number;
};

/** @internal */
export const SaveMonthCategory$outboundSchema: z.ZodType<
  SaveMonthCategory$Outbound,
  z.ZodTypeDef,
  SaveMonthCategory
> = z.object({
  budgeted: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SaveMonthCategory$ {
  /** @deprecated use `SaveMonthCategory$inboundSchema` instead. */
  export const inboundSchema = SaveMonthCategory$inboundSchema;
  /** @deprecated use `SaveMonthCategory$outboundSchema` instead. */
  export const outboundSchema = SaveMonthCategory$outboundSchema;
  /** @deprecated use `SaveMonthCategory$Outbound` instead. */
  export type Outbound = SaveMonthCategory$Outbound;
}

export function saveMonthCategoryToJSON(
  saveMonthCategory: SaveMonthCategory,
): string {
  return JSON.stringify(
    SaveMonthCategory$outboundSchema.parse(saveMonthCategory),
  );
}

export function saveMonthCategoryFromJSON(
  jsonString: string,
): SafeParseResult<SaveMonthCategory, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SaveMonthCategory$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SaveMonthCategory' from JSON`,
  );
}
