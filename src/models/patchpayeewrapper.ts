/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  SavePayee,
  SavePayee$inboundSchema,
  SavePayee$Outbound,
  SavePayee$outboundSchema,
} from "./savepayee.js";

export type PatchPayeeWrapper = {
  payee: SavePayee;
};

/** @internal */
export const PatchPayeeWrapper$inboundSchema: z.ZodType<
  PatchPayeeWrapper,
  z.ZodTypeDef,
  unknown
> = z.object({
  payee: SavePayee$inboundSchema,
});

/** @internal */
export type PatchPayeeWrapper$Outbound = {
  payee: SavePayee$Outbound;
};

/** @internal */
export const PatchPayeeWrapper$outboundSchema: z.ZodType<
  PatchPayeeWrapper$Outbound,
  z.ZodTypeDef,
  PatchPayeeWrapper
> = z.object({
  payee: SavePayee$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchPayeeWrapper$ {
  /** @deprecated use `PatchPayeeWrapper$inboundSchema` instead. */
  export const inboundSchema = PatchPayeeWrapper$inboundSchema;
  /** @deprecated use `PatchPayeeWrapper$outboundSchema` instead. */
  export const outboundSchema = PatchPayeeWrapper$outboundSchema;
  /** @deprecated use `PatchPayeeWrapper$Outbound` instead. */
  export type Outbound = PatchPayeeWrapper$Outbound;
}

export function patchPayeeWrapperToJSON(
  patchPayeeWrapper: PatchPayeeWrapper,
): string {
  return JSON.stringify(
    PatchPayeeWrapper$outboundSchema.parse(patchPayeeWrapper),
  );
}

export function patchPayeeWrapperFromJSON(
  jsonString: string,
): SafeParseResult<PatchPayeeWrapper, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PatchPayeeWrapper$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PatchPayeeWrapper' from JSON`,
  );
}
