/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  MonthDetail,
  MonthDetail$inboundSchema,
  MonthDetail$Outbound,
  MonthDetail$outboundSchema,
} from "./monthdetail.js";

export type MonthDetailResponseData = {
  month: MonthDetail;
};

export type MonthDetailResponse = {
  data: MonthDetailResponseData;
};

/** @internal */
export const MonthDetailResponseData$inboundSchema: z.ZodType<
  MonthDetailResponseData,
  z.ZodTypeDef,
  unknown
> = z.object({
  month: MonthDetail$inboundSchema,
});

/** @internal */
export type MonthDetailResponseData$Outbound = {
  month: MonthDetail$Outbound;
};

/** @internal */
export const MonthDetailResponseData$outboundSchema: z.ZodType<
  MonthDetailResponseData$Outbound,
  z.ZodTypeDef,
  MonthDetailResponseData
> = z.object({
  month: MonthDetail$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MonthDetailResponseData$ {
  /** @deprecated use `MonthDetailResponseData$inboundSchema` instead. */
  export const inboundSchema = MonthDetailResponseData$inboundSchema;
  /** @deprecated use `MonthDetailResponseData$outboundSchema` instead. */
  export const outboundSchema = MonthDetailResponseData$outboundSchema;
  /** @deprecated use `MonthDetailResponseData$Outbound` instead. */
  export type Outbound = MonthDetailResponseData$Outbound;
}

export function monthDetailResponseDataToJSON(
  monthDetailResponseData: MonthDetailResponseData,
): string {
  return JSON.stringify(
    MonthDetailResponseData$outboundSchema.parse(monthDetailResponseData),
  );
}

export function monthDetailResponseDataFromJSON(
  jsonString: string,
): SafeParseResult<MonthDetailResponseData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MonthDetailResponseData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MonthDetailResponseData' from JSON`,
  );
}

/** @internal */
export const MonthDetailResponse$inboundSchema: z.ZodType<
  MonthDetailResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => MonthDetailResponseData$inboundSchema),
});

/** @internal */
export type MonthDetailResponse$Outbound = {
  data: MonthDetailResponseData$Outbound;
};

/** @internal */
export const MonthDetailResponse$outboundSchema: z.ZodType<
  MonthDetailResponse$Outbound,
  z.ZodTypeDef,
  MonthDetailResponse
> = z.object({
  data: z.lazy(() => MonthDetailResponseData$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MonthDetailResponse$ {
  /** @deprecated use `MonthDetailResponse$inboundSchema` instead. */
  export const inboundSchema = MonthDetailResponse$inboundSchema;
  /** @deprecated use `MonthDetailResponse$outboundSchema` instead. */
  export const outboundSchema = MonthDetailResponse$outboundSchema;
  /** @deprecated use `MonthDetailResponse$Outbound` instead. */
  export type Outbound = MonthDetailResponse$Outbound;
}

export function monthDetailResponseToJSON(
  monthDetailResponse: MonthDetailResponse,
): string {
  return JSON.stringify(
    MonthDetailResponse$outboundSchema.parse(monthDetailResponse),
  );
}

export function monthDetailResponseFromJSON(
  jsonString: string,
): SafeParseResult<MonthDetailResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MonthDetailResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MonthDetailResponse' from JSON`,
  );
}
