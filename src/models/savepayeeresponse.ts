/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  Payee,
  Payee$inboundSchema,
  Payee$Outbound,
  Payee$outboundSchema,
} from "./payee.js";

export type SavePayeeResponseData = {
  payee: Payee;
  /**
   * The knowledge of the server
   */
  serverKnowledge: number;
};

export type SavePayeeResponse = {
  data: SavePayeeResponseData;
};

/** @internal */
export const SavePayeeResponseData$inboundSchema: z.ZodType<
  SavePayeeResponseData,
  z.ZodTypeDef,
  unknown
> = z.object({
  payee: Payee$inboundSchema,
  server_knowledge: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    "server_knowledge": "serverKnowledge",
  });
});

/** @internal */
export type SavePayeeResponseData$Outbound = {
  payee: Payee$Outbound;
  server_knowledge: number;
};

/** @internal */
export const SavePayeeResponseData$outboundSchema: z.ZodType<
  SavePayeeResponseData$Outbound,
  z.ZodTypeDef,
  SavePayeeResponseData
> = z.object({
  payee: Payee$outboundSchema,
  serverKnowledge: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    serverKnowledge: "server_knowledge",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SavePayeeResponseData$ {
  /** @deprecated use `SavePayeeResponseData$inboundSchema` instead. */
  export const inboundSchema = SavePayeeResponseData$inboundSchema;
  /** @deprecated use `SavePayeeResponseData$outboundSchema` instead. */
  export const outboundSchema = SavePayeeResponseData$outboundSchema;
  /** @deprecated use `SavePayeeResponseData$Outbound` instead. */
  export type Outbound = SavePayeeResponseData$Outbound;
}

export function savePayeeResponseDataToJSON(
  savePayeeResponseData: SavePayeeResponseData,
): string {
  return JSON.stringify(
    SavePayeeResponseData$outboundSchema.parse(savePayeeResponseData),
  );
}

export function savePayeeResponseDataFromJSON(
  jsonString: string,
): SafeParseResult<SavePayeeResponseData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SavePayeeResponseData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SavePayeeResponseData' from JSON`,
  );
}

/** @internal */
export const SavePayeeResponse$inboundSchema: z.ZodType<
  SavePayeeResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => SavePayeeResponseData$inboundSchema),
});

/** @internal */
export type SavePayeeResponse$Outbound = {
  data: SavePayeeResponseData$Outbound;
};

/** @internal */
export const SavePayeeResponse$outboundSchema: z.ZodType<
  SavePayeeResponse$Outbound,
  z.ZodTypeDef,
  SavePayeeResponse
> = z.object({
  data: z.lazy(() => SavePayeeResponseData$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SavePayeeResponse$ {
  /** @deprecated use `SavePayeeResponse$inboundSchema` instead. */
  export const inboundSchema = SavePayeeResponse$inboundSchema;
  /** @deprecated use `SavePayeeResponse$outboundSchema` instead. */
  export const outboundSchema = SavePayeeResponse$outboundSchema;
  /** @deprecated use `SavePayeeResponse$Outbound` instead. */
  export type Outbound = SavePayeeResponse$Outbound;
}

export function savePayeeResponseToJSON(
  savePayeeResponse: SavePayeeResponse,
): string {
  return JSON.stringify(
    SavePayeeResponse$outboundSchema.parse(savePayeeResponse),
  );
}

export function savePayeeResponseFromJSON(
  jsonString: string,
): SafeParseResult<SavePayeeResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SavePayeeResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SavePayeeResponse' from JSON`,
  );
}
