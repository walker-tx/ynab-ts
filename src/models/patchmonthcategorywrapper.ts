/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  SaveMonthCategory,
  SaveMonthCategory$inboundSchema,
  SaveMonthCategory$Outbound,
  SaveMonthCategory$outboundSchema,
} from "./savemonthcategory.js";

export type PatchMonthCategoryWrapper = {
  category: SaveMonthCategory;
};

/** @internal */
export const PatchMonthCategoryWrapper$inboundSchema: z.ZodType<
  PatchMonthCategoryWrapper,
  z.ZodTypeDef,
  unknown
> = z.object({
  category: SaveMonthCategory$inboundSchema,
});

/** @internal */
export type PatchMonthCategoryWrapper$Outbound = {
  category: SaveMonthCategory$Outbound;
};

/** @internal */
export const PatchMonthCategoryWrapper$outboundSchema: z.ZodType<
  PatchMonthCategoryWrapper$Outbound,
  z.ZodTypeDef,
  PatchMonthCategoryWrapper
> = z.object({
  category: SaveMonthCategory$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchMonthCategoryWrapper$ {
  /** @deprecated use `PatchMonthCategoryWrapper$inboundSchema` instead. */
  export const inboundSchema = PatchMonthCategoryWrapper$inboundSchema;
  /** @deprecated use `PatchMonthCategoryWrapper$outboundSchema` instead. */
  export const outboundSchema = PatchMonthCategoryWrapper$outboundSchema;
  /** @deprecated use `PatchMonthCategoryWrapper$Outbound` instead. */
  export type Outbound = PatchMonthCategoryWrapper$Outbound;
}

export function patchMonthCategoryWrapperToJSON(
  patchMonthCategoryWrapper: PatchMonthCategoryWrapper,
): string {
  return JSON.stringify(
    PatchMonthCategoryWrapper$outboundSchema.parse(patchMonthCategoryWrapper),
  );
}

export function patchMonthCategoryWrapperFromJSON(
  jsonString: string,
): SafeParseResult<PatchMonthCategoryWrapper, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PatchMonthCategoryWrapper$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PatchMonthCategoryWrapper' from JSON`,
  );
}
