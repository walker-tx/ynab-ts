/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  BudgetSettings,
  BudgetSettings$inboundSchema,
  BudgetSettings$Outbound,
  BudgetSettings$outboundSchema,
} from "./budgetsettings.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type BudgetSettingsResponseData = {
  settings: BudgetSettings;
};

export type BudgetSettingsResponse = {
  data: BudgetSettingsResponseData;
};

/** @internal */
export const BudgetSettingsResponseData$inboundSchema: z.ZodType<
  BudgetSettingsResponseData,
  z.ZodTypeDef,
  unknown
> = z.object({
  settings: BudgetSettings$inboundSchema,
});

/** @internal */
export type BudgetSettingsResponseData$Outbound = {
  settings: BudgetSettings$Outbound;
};

/** @internal */
export const BudgetSettingsResponseData$outboundSchema: z.ZodType<
  BudgetSettingsResponseData$Outbound,
  z.ZodTypeDef,
  BudgetSettingsResponseData
> = z.object({
  settings: BudgetSettings$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BudgetSettingsResponseData$ {
  /** @deprecated use `BudgetSettingsResponseData$inboundSchema` instead. */
  export const inboundSchema = BudgetSettingsResponseData$inboundSchema;
  /** @deprecated use `BudgetSettingsResponseData$outboundSchema` instead. */
  export const outboundSchema = BudgetSettingsResponseData$outboundSchema;
  /** @deprecated use `BudgetSettingsResponseData$Outbound` instead. */
  export type Outbound = BudgetSettingsResponseData$Outbound;
}

export function budgetSettingsResponseDataToJSON(
  budgetSettingsResponseData: BudgetSettingsResponseData,
): string {
  return JSON.stringify(
    BudgetSettingsResponseData$outboundSchema.parse(budgetSettingsResponseData),
  );
}

export function budgetSettingsResponseDataFromJSON(
  jsonString: string,
): SafeParseResult<BudgetSettingsResponseData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BudgetSettingsResponseData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BudgetSettingsResponseData' from JSON`,
  );
}

/** @internal */
export const BudgetSettingsResponse$inboundSchema: z.ZodType<
  BudgetSettingsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => BudgetSettingsResponseData$inboundSchema),
});

/** @internal */
export type BudgetSettingsResponse$Outbound = {
  data: BudgetSettingsResponseData$Outbound;
};

/** @internal */
export const BudgetSettingsResponse$outboundSchema: z.ZodType<
  BudgetSettingsResponse$Outbound,
  z.ZodTypeDef,
  BudgetSettingsResponse
> = z.object({
  data: z.lazy(() => BudgetSettingsResponseData$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BudgetSettingsResponse$ {
  /** @deprecated use `BudgetSettingsResponse$inboundSchema` instead. */
  export const inboundSchema = BudgetSettingsResponse$inboundSchema;
  /** @deprecated use `BudgetSettingsResponse$outboundSchema` instead. */
  export const outboundSchema = BudgetSettingsResponse$outboundSchema;
  /** @deprecated use `BudgetSettingsResponse$Outbound` instead. */
  export type Outbound = BudgetSettingsResponse$Outbound;
}

export function budgetSettingsResponseToJSON(
  budgetSettingsResponse: BudgetSettingsResponse,
): string {
  return JSON.stringify(
    BudgetSettingsResponse$outboundSchema.parse(budgetSettingsResponse),
  );
}

export function budgetSettingsResponseFromJSON(
  jsonString: string,
): SafeParseResult<BudgetSettingsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BudgetSettingsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BudgetSettingsResponse' from JSON`,
  );
}
