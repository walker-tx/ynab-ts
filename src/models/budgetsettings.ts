/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  CurrencyFormat,
  CurrencyFormat$inboundSchema,
  CurrencyFormat$Outbound,
  CurrencyFormat$outboundSchema,
} from "./currencyformat.js";
import {
  DateFormat,
  DateFormat$inboundSchema,
  DateFormat$Outbound,
  DateFormat$outboundSchema,
} from "./dateformat.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type BudgetSettings = {
  /**
   * The date format setting for the budget.  In some cases the format will not be available and will be specified as null.
   */
  dateFormat: DateFormat | null;
  /**
   * The currency format setting for the budget.  In some cases the format will not be available and will be specified as null.
   */
  currencyFormat: CurrencyFormat | null;
};

/** @internal */
export const BudgetSettings$inboundSchema: z.ZodType<
  BudgetSettings,
  z.ZodTypeDef,
  unknown
> = z.object({
  date_format: z.nullable(DateFormat$inboundSchema),
  currency_format: z.nullable(CurrencyFormat$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "date_format": "dateFormat",
    "currency_format": "currencyFormat",
  });
});

/** @internal */
export type BudgetSettings$Outbound = {
  date_format: DateFormat$Outbound | null;
  currency_format: CurrencyFormat$Outbound | null;
};

/** @internal */
export const BudgetSettings$outboundSchema: z.ZodType<
  BudgetSettings$Outbound,
  z.ZodTypeDef,
  BudgetSettings
> = z.object({
  dateFormat: z.nullable(DateFormat$outboundSchema),
  currencyFormat: z.nullable(CurrencyFormat$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    dateFormat: "date_format",
    currencyFormat: "currency_format",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BudgetSettings$ {
  /** @deprecated use `BudgetSettings$inboundSchema` instead. */
  export const inboundSchema = BudgetSettings$inboundSchema;
  /** @deprecated use `BudgetSettings$outboundSchema` instead. */
  export const outboundSchema = BudgetSettings$outboundSchema;
  /** @deprecated use `BudgetSettings$Outbound` instead. */
  export type Outbound = BudgetSettings$Outbound;
}

export function budgetSettingsToJSON(budgetSettings: BudgetSettings): string {
  return JSON.stringify(BudgetSettings$outboundSchema.parse(budgetSettings));
}

export function budgetSettingsFromJSON(
  jsonString: string,
): SafeParseResult<BudgetSettings, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BudgetSettings$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BudgetSettings' from JSON`,
  );
}
