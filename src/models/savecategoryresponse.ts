/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  Category,
  Category$inboundSchema,
  Category$Outbound,
  Category$outboundSchema,
} from "./category.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type SaveCategoryResponseData = {
  category: Category;
  /**
   * The knowledge of the server
   */
  serverKnowledge: number;
};

export type SaveCategoryResponse = {
  data: SaveCategoryResponseData;
};

/** @internal */
export const SaveCategoryResponseData$inboundSchema: z.ZodType<
  SaveCategoryResponseData,
  z.ZodTypeDef,
  unknown
> = z.object({
  category: Category$inboundSchema,
  server_knowledge: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    "server_knowledge": "serverKnowledge",
  });
});

/** @internal */
export type SaveCategoryResponseData$Outbound = {
  category: Category$Outbound;
  server_knowledge: number;
};

/** @internal */
export const SaveCategoryResponseData$outboundSchema: z.ZodType<
  SaveCategoryResponseData$Outbound,
  z.ZodTypeDef,
  SaveCategoryResponseData
> = z.object({
  category: Category$outboundSchema,
  serverKnowledge: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    serverKnowledge: "server_knowledge",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SaveCategoryResponseData$ {
  /** @deprecated use `SaveCategoryResponseData$inboundSchema` instead. */
  export const inboundSchema = SaveCategoryResponseData$inboundSchema;
  /** @deprecated use `SaveCategoryResponseData$outboundSchema` instead. */
  export const outboundSchema = SaveCategoryResponseData$outboundSchema;
  /** @deprecated use `SaveCategoryResponseData$Outbound` instead. */
  export type Outbound = SaveCategoryResponseData$Outbound;
}

export function saveCategoryResponseDataToJSON(
  saveCategoryResponseData: SaveCategoryResponseData,
): string {
  return JSON.stringify(
    SaveCategoryResponseData$outboundSchema.parse(saveCategoryResponseData),
  );
}

export function saveCategoryResponseDataFromJSON(
  jsonString: string,
): SafeParseResult<SaveCategoryResponseData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SaveCategoryResponseData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SaveCategoryResponseData' from JSON`,
  );
}

/** @internal */
export const SaveCategoryResponse$inboundSchema: z.ZodType<
  SaveCategoryResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => SaveCategoryResponseData$inboundSchema),
});

/** @internal */
export type SaveCategoryResponse$Outbound = {
  data: SaveCategoryResponseData$Outbound;
};

/** @internal */
export const SaveCategoryResponse$outboundSchema: z.ZodType<
  SaveCategoryResponse$Outbound,
  z.ZodTypeDef,
  SaveCategoryResponse
> = z.object({
  data: z.lazy(() => SaveCategoryResponseData$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SaveCategoryResponse$ {
  /** @deprecated use `SaveCategoryResponse$inboundSchema` instead. */
  export const inboundSchema = SaveCategoryResponse$inboundSchema;
  /** @deprecated use `SaveCategoryResponse$outboundSchema` instead. */
  export const outboundSchema = SaveCategoryResponse$outboundSchema;
  /** @deprecated use `SaveCategoryResponse$Outbound` instead. */
  export type Outbound = SaveCategoryResponse$Outbound;
}

export function saveCategoryResponseToJSON(
  saveCategoryResponse: SaveCategoryResponse,
): string {
  return JSON.stringify(
    SaveCategoryResponse$outboundSchema.parse(saveCategoryResponse),
  );
}

export function saveCategoryResponseFromJSON(
  jsonString: string,
): SafeParseResult<SaveCategoryResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SaveCategoryResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SaveCategoryResponse' from JSON`,
  );
}
