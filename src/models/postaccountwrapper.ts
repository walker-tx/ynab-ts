/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  SaveAccount,
  SaveAccount$inboundSchema,
  SaveAccount$Outbound,
  SaveAccount$outboundSchema,
} from "./saveaccount.js";

export type PostAccountWrapper = {
  account: SaveAccount;
};

/** @internal */
export const PostAccountWrapper$inboundSchema: z.ZodType<
  PostAccountWrapper,
  z.ZodTypeDef,
  unknown
> = z.object({
  account: SaveAccount$inboundSchema,
});

/** @internal */
export type PostAccountWrapper$Outbound = {
  account: SaveAccount$Outbound;
};

/** @internal */
export const PostAccountWrapper$outboundSchema: z.ZodType<
  PostAccountWrapper$Outbound,
  z.ZodTypeDef,
  PostAccountWrapper
> = z.object({
  account: SaveAccount$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostAccountWrapper$ {
  /** @deprecated use `PostAccountWrapper$inboundSchema` instead. */
  export const inboundSchema = PostAccountWrapper$inboundSchema;
  /** @deprecated use `PostAccountWrapper$outboundSchema` instead. */
  export const outboundSchema = PostAccountWrapper$outboundSchema;
  /** @deprecated use `PostAccountWrapper$Outbound` instead. */
  export type Outbound = PostAccountWrapper$Outbound;
}

export function postAccountWrapperToJSON(
  postAccountWrapper: PostAccountWrapper,
): string {
  return JSON.stringify(
    PostAccountWrapper$outboundSchema.parse(postAccountWrapper),
  );
}

export function postAccountWrapperFromJSON(
  jsonString: string,
): SafeParseResult<PostAccountWrapper, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostAccountWrapper$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostAccountWrapper' from JSON`,
  );
}
